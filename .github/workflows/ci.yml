name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Run Backend Tests
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'

      - name: Run Spring Boot tests
        run: |
          cd backend
          chmod +x ./gradlew
          ./gradlew test

  # Job 2: Run Frontend Tests
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js 22
        uses: actions/setup-node@v5
        with:
          node-version: '22' # Use the same LTS version as your Dockerfile
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm install

      - name: Run React tests (Vitest)
        run: cd frontend && npm run test

  # (Optional) Job 3: Build Docker images after tests pass
  # This is a good check to ensure your Dockerfiles are not broken.
  build-docker-images:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend] # Run only if tests pass
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: docker build -t my-backend-image:latest ./backend

      - name: Build frontend image
        run: docker build -t my-frontend-image:latest ./frontend